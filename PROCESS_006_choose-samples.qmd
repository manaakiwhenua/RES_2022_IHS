---
title: "Testing IHS"
format: 
  html:
    theme: cosmo
    self-contained: true
    fig-align: center
    css: styles.css
editor: visual
bibliography: references.bib
knitr:
  opts_chunk:
    comment: "#>"
    collapse: true
    fig.align: 'center'
    fig.show: 'hold'
    results: 'hold'
    message: false
    warning: false
editor_options: 
  chunk_output_type: console
---

```{r}
library(tidyverse)
library(terra)
library(sf)
library(leaflet)
library(scico)
```

## Choose sample points

With the data produced in the last step, maps of average membership for each ECC can be produced.

```{r}
map_dir <- file.path('data_spatial', 'model_outputs')

cl_04 <- rast(file.path(map_dir, 'cluster_04_membership.tif'))
cl_05 <- rast(file.path(map_dir, 'cluster_05_membership.tif'))
cl_06 <- rast(file.path(map_dir, 'cluster_06_membership.tif'))
cl_07 <- rast(file.path(map_dir, 'cluster_07_membership.tif'))
cl_08 <- rast(file.path(map_dir, 'cluster_08_membership.tif'))

ecc_map <- rast(file.path(map_dir, 'ecc_map.tif'))

eccs <- read_csv(file.path('sample_plan', 'ECC_table.csv')) %>% 
  dplyr::filter(is_unique == TRUE & rep_area > 20)

head(eccs)
```

Lets map out potential sites for the first ECC as an example.

### 2-2-2-2-8

First, pull out the relevant cluster map from each set of outputs, and take the mean.

```{r}
clchain_mem <- rast(list(cl_04[[2]],
                         cl_05[[2]], 
                         cl_06[[2]],
                         cl_07[[2]],
                         cl_08[[8]])
                     )
# calculate the average membership on each pixel
mean_mem_01 <- mean(clchain_mem) 
```

Second, take the ECC map and mask it to the UID of this ECC, which in this case is `1`. Use the mask to remove any membership information from outside of the ECC's area.

```{r}
mask_mem_01 <- ecc_map
mask_mem_01[mask_mem_01 != 1] <- NA # number from ecc_map$uid
mask_mem_01[mask_mem_01 == 1] <- 0

ecc_01 <- mean_mem_01 + mask_mem_01

if(!dir.exists(file.path('data_spatial', 'ecc_results'))) {
  dir.create(file.path('data_spatial', 'ecc_results'))
}

writeRaster(ecc_01, 
            file.path('data_spatial', 'ecc_results', 'ecc_01.tif'),
            overwrite = TRUE,
            datatype = 'FLT4S',
            gdal = "COMPRESS=LZW")
```

```{r}
#| echo: false
#| column: screen-inset

hs_fps <- 
  rast(file.path('data_spatial', 'elevation', 'hillshade_FPS_1m.tif'))
pal <- colorNumeric(palette = ,scico(20, palette = 'batlow'),
                    domain = c(0,1),
                    na.color = NA)

leaflet() %>%
  addTiles(urlTemplate = "https://basemaps.linz.govt.nz/v1/tiles/aerial/WebMercatorQuad/{z}/{x}/{y}.webp?api=c01gasx5z7qptvpjrc85ysfjzbj",
           attribution = "Â© 2021 Land Information New Zealand",
           group = 'Base Image') %>% 
  addRasterImage(x = hs_fps, 
                 opacity = 1, 
                 colors = grey(0:255/256),
                 group = 'Hillshade') %>% 
  addRasterImage(x = ecc_01, 
                 opacity = 0.5, 
                 colors = pal,
                 group = 'ECC 1') %>% 
  addLayersControl(baseGroups = c('Base Image'),
                   overlayGroups = c('Hillshade',
                                     'ECC 1'),
                   options = layersControlOptions(collapsed = FALSE)) %>% 
  addLegend(position = 'bottomright',
            pal = pal, 
            values = values(ecc_01),
            title = 'Membership',
            opacity = 0.8,
            group = 'ECC 1')

```

At this point, one could pick any non-NA cell in the above map to sample as being representative of this ECC. Ideally the site would be located where the average membership is as high as possible, allowing for efficient access. These surfaces are somewhat analogous to the Gower dissimilarity surfaces used by @brungard2015 for flexible cLHS sampling.

The location of the 'best' pixel on this surface could be chosen automatically, but there's a danger of selecting pixels containing features that prevent sampling, or that are otherwise physically inaccessible.

A more careful approach could be to export a set of the *n* highest-membership pixels for each ECC, and check them manually for accessibility in a GIS before choosing.

Below, the top twenty pixels for the first cluster chain are selected for evaluation:

```{r}
best_vals_01 <- sort(terra::values(ecc_01), decreasing = TRUE)[seq(20)]
best_cells_01 <- which(terra::values(ecc_01) %in% best_vals_01)
bs_01 <- terra::xyFromCell(ecc_01, best_cells_01)
poss_pts_01 <- st_as_sf(data.frame(bs_01), 
                        coords = c(1, 2),
                        crs = 2193) %>% 
  mutate(VAL = terra::extract(ecc_01, best_cells_01)[[1]]) %>%
  arrange(desc(VAL)) %>% 
  mutate(ID = seq(nrow(.))) 

write_sf(poss_pts_01, 
         file.path('data_spatial', 'ecc_results', 'ecc_01_poss_pts.gpkg'),
         delete_dsn = TRUE)
```

```{r}
#| echo: false

eccdf_01 <- as.data.frame(ecc_01, xy = TRUE) %>% 
  dplyr::filter(complete.cases(.))

ggplot(eccdf_01) +
  geom_tile(aes(x = x, y = y, fill = mean), alpha = 0.5) +
  geom_sf(data = poss_pts_01, colour = 'red', pch = 20, size = 3, 
          show.legend = 'point') +
  scale_fill_scico(palette = 'batlow') +
  labs(x = '', y = '', fill = 'Membership', colour = 'Possible') +
  theme_minimal() +
  theme(axis.text = element_blank()) +
  coord_sf(datum = 2193)
```

Some of these points are on isolated pixels. Depending on the inputs being clustered and what the clusters are expected to represent spatially, it may be prudent to first de-speckle the ECC map and target the highest membership value within a large, contiguous patch. However, a spatially aware clustering method should probably be used before attempting this.

Still, here's how to de-speckle the ECC surface:

```{r}
# https://gis.stackexchange.com/questions/432539/delete-single-pixels-noise-from-raster
ecc_01_patch <- patches(ecc_01, directions = 8)
ecc_01_area <- zonal(cellSize(ecc_01_patch, unit="m"), 
                     ecc_01_patch, 
                     sum, 
                     as.raster = TRUE)

# remove patches < 0.2 ha
ecc_01_clean <- terra::ifel(ecc_01_area < 2000, NA, ecc_01)
```

```{r}
#| echo: false
eccdf_01_clean <- as.data.frame(ecc_01_clean, xy = TRUE) %>% 
  dplyr::filter(complete.cases(.))

ggplot(eccdf_01_clean) +
  geom_tile(aes(x = x, y = y, fill = mean)) +
  scale_fill_scico(palette = 'batlow') +
  labs(x = '', y = '', fill = 'Membership') +
  theme_minimal() +
  theme(axis.text = element_blank()) +
  coord_sf(datum = 2193)
```

Below, the point-choosing exercise is repeated for the other 8 ECCs. Note that the results are visibly substandard, but this is the result of just repeating the covariates used in @yang2013. As the precursor paper @zhu2010 notes, these are not expected to be universally applicable choices in all landscapes.

::: panel-tabset
### 3-3-3-6-6

```{r}
mean_mem_02 <- 
  mean(rast(list(cl_04[[3]],
                 cl_05[[3]], 
                 cl_06[[3]],
                 cl_07[[6]],
                 cl_08[[6]])))

mask_mem_02 <- ecc_map
mask_mem_02[mask_mem_02 != 2] <- NA 
mask_mem_02[mask_mem_02 == 2] <- 0

ecc_02 <- mean_mem_02 + mask_mem_02

# note that ECCs with ncell < 20 have been dropped
best_vals_02 <- sort(terra::values(ecc_02), decreasing = TRUE)[seq(20)]
best_cells_02 <- which(terra::values(ecc_02) %in% best_vals_02)
bs_02 <- terra::xyFromCell(ecc_02, best_cells_02)
poss_pts_02 <- st_as_sf(data.frame(bs_02), 
                        coords = c(1, 2), 
                        crs = 2193) %>% 
  mutate(VAL = terra::extract(ecc_02, best_cells_02)[[1]]) %>%
  arrange(desc(VAL)) %>% 
  mutate(ID = seq(nrow(.)))

```

```{r}
#| echo: false
eccdf_02 <- as.data.frame(ecc_02, xy = TRUE) %>% 
  dplyr::filter(complete.cases(.))

ggplot(eccdf_02) +
  geom_tile(aes(x = x, y = y, fill = mean), alpha = 0.5) +
  geom_sf(data = poss_pts_02, colour = 'red', pch = 20, size = 3, 
          show.legend = 'point') +
  scale_fill_scico(palette = 'batlow') +
  labs(x = '', y = '', fill = 'Membership', colour = 'Possible') +
  theme_minimal() +
  theme(axis.text = element_blank()) +
  coord_sf(datum = 2193)
```

### 1-1-5-1-1

```{r}
mean_mem_03 <- 
  mean(rast(list(cl_04[[1]],
                 cl_05[[1]], 
                 cl_06[[5]],
                 cl_07[[1]],
                 cl_08[[1]])))

mask_mem_03 <- ecc_map
mask_mem_03[mask_mem_03 != 3] <- NA 
mask_mem_03[mask_mem_03 == 3] <- 0

ecc_03 <- mean_mem_03 + mask_mem_03

# note that ECCs with ncell < 20 have been dropped
best_vals_03 <- sort(terra::values(ecc_03), decreasing = TRUE)[seq(20)]
best_cells_03 <- which(terra::values(ecc_03) %in% best_vals_03)
bs_03 <- terra::xyFromCell(ecc_03, best_cells_03)
poss_pts_03 <- st_as_sf(data.frame(bs_03), 
                        coords = c(1, 2), 
                        crs = 2193) %>% 
  mutate(VAL = terra::extract(ecc_03, best_cells_03)[[1]]) %>%
  arrange(desc(VAL)) %>% 
  mutate(ID = seq(nrow(.)))

```

```{r}
#| echo: false
eccdf_03 <- as.data.frame(ecc_03, xy = TRUE) %>% 
  dplyr::filter(complete.cases(.))

ggplot(eccdf_03) +
  geom_tile(aes(x = x, y = y, fill = mean), alpha = 0.5) +
  geom_sf(data = poss_pts_03, colour = 'red', pch = 20, size = 3, 
          show.legend = 'point') +
  scale_fill_scico(palette = 'batlow') +
  labs(x = '', y = '', fill = 'Membership', colour = 'Possible') +
  theme_minimal() +
  theme(axis.text = element_blank()) +
  coord_sf(datum = 2193)
```

### 1-5-5-1-5

```{r}
mean_mem_04 <- 
  mean(rast(list(cl_04[[1]],
                 cl_05[[5]], 
                 cl_06[[5]],
                 cl_07[[1]],
                 cl_08[[5]])))

mask_mem_04 <- ecc_map
mask_mem_04[mask_mem_04 != 4] <- NA 
mask_mem_04[mask_mem_04 == 4] <- 0

ecc_04 <- mean_mem_04 + mask_mem_04

# note that ECCs with ncell < 20 have been dropped
best_vals_04 <- sort(terra::values(ecc_04), decreasing = TRUE)[seq(20)]
best_cells_04 <- which(terra::values(ecc_04) %in% best_vals_04)
bs_04 <- terra::xyFromCell(ecc_04, best_cells_04)
poss_pts_04 <- st_as_sf(data.frame(bs_04), 
                        coords = c(1, 2), 
                        crs = 2193) %>% 
  mutate(VAL = terra::extract(ecc_04, best_cells_04)[[1]]) %>%
  arrange(desc(VAL)) %>% 
  mutate(ID = seq(nrow(.)))

```

```{r}
#| echo: false
eccdf_04 <- as.data.frame(ecc_04, xy = TRUE) %>% 
  dplyr::filter(complete.cases(.))

ggplot(eccdf_04) +
  geom_tile(aes(x = x, y = y, fill = mean), alpha = 0.5) +
  geom_sf(data = poss_pts_04, colour = 'red', pch = 20, size = 3, 
          show.legend = 'point') +
  scale_fill_scico(palette = 'batlow') +
  labs(x = '', y = '', fill = 'Membership', colour = 'Possible') +
  theme_minimal() +
  theme(axis.text = element_blank()) +
  coord_sf(datum = 2193)
```

### 2-1-1-7-2

```{r}
mean_mem_05 <- 
  mean(rast(list(cl_04[[2]],
                 cl_05[[1]], 
                 cl_06[[1]],
                 cl_07[[7]],
                 cl_08[[2]])))

mask_mem_05 <- ecc_map
mask_mem_05[mask_mem_05 != 5] <- NA 
mask_mem_05[mask_mem_05 == 5] <- 0

ecc_05 <- mean_mem_05 + mask_mem_05

# note that ECCs with ncell < 20 have been dropped
best_vals_05 <- sort(terra::values(ecc_05), decreasing = TRUE)[seq(20)]
best_cells_05 <- which(terra::values(ecc_05) %in% best_vals_05)
bs_05 <- terra::xyFromCell(ecc_05, best_cells_05)
poss_pts_05 <- st_as_sf(data.frame(bs_05), 
                        coords = c(1, 2), 
                        crs = 2193) %>% 
  mutate(VAL = terra::extract(ecc_05, best_cells_05)[[1]]) %>%
  arrange(desc(VAL)) %>% 
  mutate(ID = seq(nrow(.)))

```

```{r}
#| echo: false
eccdf_05 <- as.data.frame(ecc_05, xy = TRUE) %>% 
  dplyr::filter(complete.cases(.))

ggplot(eccdf_05) +
  geom_tile(aes(x = x, y = y, fill = mean), alpha = 0.5) +
  geom_sf(data = poss_pts_05, colour = 'red', pch = 20, size = 3, 
          show.legend = 'point') +
  scale_fill_scico(palette = 'batlow') +
  labs(x = '', y = '', fill = 'Membership', colour = 'Possible') +
  theme_minimal() +
  theme(axis.text = element_blank()) +
  coord_sf(datum = 2193)
```

### 1-1-1-7-1

```{r}
mean_mem_06 <- 
  mean(rast(list(cl_04[[1]],
                 cl_05[[1]], 
                 cl_06[[1]],
                 cl_07[[7]],
                 cl_08[[1]])))

mask_mem_06 <- ecc_map
mask_mem_06[mask_mem_06 != 6] <- NA 
mask_mem_06[mask_mem_06 == 6] <- 0

ecc_06 <- mean_mem_06 + mask_mem_06

# note that ECCs with ncell < 20 have been dropped
best_vals_06 <- sort(terra::values(ecc_06), decreasing = TRUE)[seq(20)]
best_cells_06 <- which(terra::values(ecc_06) %in% best_vals_06)
bs_06 <- terra::xyFromCell(ecc_06, best_cells_06)
poss_pts_06 <- st_as_sf(data.frame(bs_06), 
                        coords = c(1, 2), 
                        crs = 2193) %>% 
  mutate(VAL = terra::extract(ecc_06, best_cells_06)[[1]]) %>%
  arrange(desc(VAL)) %>% 
  mutate(ID = seq(nrow(.)))

```

```{r}
#| echo: false
eccdf_06 <- as.data.frame(ecc_06, xy = TRUE) %>% 
  dplyr::filter(complete.cases(.))

ggplot(eccdf_06) +
  geom_tile(aes(x = x, y = y, fill = mean), alpha = 0.5) +
  geom_sf(data = poss_pts_06, colour = 'red', pch = 20, size = 3, 
          show.legend = 'point') +
  scale_fill_scico(palette = 'batlow') +
  labs(x = '', y = '', fill = 'Membership', colour = 'Possible') +
  theme_minimal() +
  theme(axis.text = element_blank()) +
  coord_sf(datum = 2193)
```

### 2-2-0-7-2

```{r}
mean_mem_07 <- 
  mean(rast(list(cl_04[[2]],
                 cl_05[[2]], 
                #cl_06[[0]], # just skip  at lower rgs
                 cl_07[[7]],
                 cl_08[[2]])))

mask_mem_07 <- ecc_map
mask_mem_07[mask_mem_07 != 16] <- NA 
mask_mem_07[mask_mem_07 == 16] <- 0

ecc_07 <- mean_mem_07 + mask_mem_07

# note that ECCs with ncell < 20 have been dropped
best_vals_07 <- sort(terra::values(ecc_07), decreasing = TRUE)[seq(20)]
best_cells_07 <- which(terra::values(ecc_07) %in% best_vals_07)
bs_07 <- terra::xyFromCell(ecc_07, best_cells_07)
poss_pts_07 <- st_as_sf(data.frame(bs_07), 
                        coords = c(1, 2), 
                        crs = 2193) %>% 
  mutate(VAL = terra::extract(ecc_07, best_cells_07)[[1]]) %>%
  arrange(desc(VAL)) %>% 
  mutate(ID = seq(nrow(.)))

```

```{r}
#| echo: false
eccdf_07 <- as.data.frame(ecc_07, xy = TRUE) %>% 
  dplyr::filter(complete.cases(.))

ggplot(eccdf_07) +
  geom_tile(aes(x = x, y = y, fill = mean), alpha = 0.5) +
  geom_sf(data = poss_pts_07, colour = 'red', pch = 20, size = 3, 
          show.legend = 'point') +
  scale_fill_scico(palette = 'batlow') +
  labs(x = '', y = '', fill = 'Membership', colour = 'Possible') +
  theme_minimal() +
  theme(axis.text = element_blank()) +
  coord_sf(datum = 2193)
```

### 4-5-3-5-0

```{r}
mean_mem_08 <- 
  mean(rast(list(cl_04[[4]],
                 cl_05[[5]], 
                 cl_06[[3]],
                 cl_07[[5]] #,
                 #cl_08[[0]]
                 )))

mask_mem_08 <- ecc_map
mask_mem_08[mask_mem_08 != 21] <- NA 
mask_mem_08[mask_mem_08 == 21] <- 0

ecc_08 <- mean_mem_08 + mask_mem_08

# note that ECCs with ncell < 20 have been dropped
best_vals_08 <- sort(terra::values(ecc_08), decreasing = TRUE)[seq(20)]
best_cells_08 <- which(terra::values(ecc_08) %in% best_vals_08)
bs_08 <- terra::xyFromCell(ecc_08, best_cells_08)
poss_pts_08 <- st_as_sf(data.frame(bs_08), 
                        coords = c(1, 2), 
                        crs = 2193) %>% 
  mutate(VAL = terra::extract(ecc_08, best_cells_08)[[1]]) %>%
  arrange(desc(VAL)) %>% 
  mutate(ID = seq(nrow(.)))

```

```{r}
#| echo: false
eccdf_08 <- as.data.frame(ecc_08, xy = TRUE) %>% 
  dplyr::filter(complete.cases(.))

ggplot(eccdf_08) +
  geom_tile(aes(x = x, y = y, fill = mean), alpha = 0.5) +
  geom_sf(data = poss_pts_08, colour = 'red', pch = 20, size = 3, 
          show.legend = 'point') +
  scale_fill_scico(palette = 'batlow') +
  labs(x = '', y = '', fill = 'Membership', colour = 'Possible') +
  theme_minimal() +
  theme(axis.text = element_blank()) +
  coord_sf(datum = 2193)
```

### 3-3-0-3-3

```{r}
mean_mem_09 <- 
  mean(rast(list(cl_04[[3]],
                 cl_05[[3]], 
                #cl_06[[0]], # just skip  at lower rgs
                 cl_07[[3]],
                 cl_08[[3]])))

mask_mem_09 <- ecc_map
mask_mem_09[mask_mem_09 != 22] <- NA 
mask_mem_09[mask_mem_09 == 22] <- 0

ecc_09 <- mean_mem_09 + mask_mem_09

# note that ECCs with ncell < 20 have been dropped
best_vals_09 <- sort(terra::values(ecc_09), decreasing = TRUE)[seq(20)]
best_cells_09 <- which(terra::values(ecc_09) %in% best_vals_09)
bs_09 <- terra::xyFromCell(ecc_09, best_cells_09)
poss_pts_09 <- st_as_sf(data.frame(bs_09), 
                        coords = c(1, 2), 
                        crs = 2193) %>% 
  mutate(VAL = terra::extract(ecc_09, best_cells_09)[[1]]) %>%
  arrange(desc(VAL)) %>% 
  mutate(ID = seq(nrow(.)))

```

```{r}
#| echo: false
eccdf_09 <- as.data.frame(ecc_09, xy = TRUE) %>% 
  dplyr::filter(complete.cases(.))

ggplot(eccdf_09) +
  geom_tile(aes(x = x, y = y, fill = mean), alpha = 0.5) +
  geom_sf(data = poss_pts_09, colour = 'red', pch = 20, size = 3, 
          show.legend = 'point') +
  scale_fill_scico(palette = 'batlow') +
  labs(x = '', y = '', fill = 'Membership', colour = 'Possible') +
  theme_minimal() +
  theme(axis.text = element_blank()) +
  coord_sf(datum = 2193)
```
:::
